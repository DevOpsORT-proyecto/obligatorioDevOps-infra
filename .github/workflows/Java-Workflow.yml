name: Reusable Java to GCP Workflow

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
      sonar-project-key:
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        required: true
      GCP_SERVICE_ACCOUNT:
        required: true


jobs:

# BUILD JOB #

  build:
  
    name: Build ${{ inputs.service-name }} Service
  
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Build ${{ inputs.service-name }} Service
        run: mvn --batch-mode --update-snapshots package       


# TEST JOB #
  
  test:
  
    name: Test ${{ inputs.service-name }} Service
    
    needs: build
    
    runs-on: ubuntu-latest
    
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
  
      - name: Test ${{ inputs.service-name }} Service
        run: mvn -B test --file pom.xml

# SONARCLOUD JOB # 

  sonarcloud:
    
    name: SonarCloud ${{ inputs.service-name }} Service
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ inputs.sonar-project-key }}

#GCP Artifact Registry #

  gcp_artifact:
    name: GCP Artifact Registry - ${{ inputs.service-name }}
    runs-on: ubuntu-latest
    needs: [test, sonarcloud]
    env:
      PROJECT_ID: 'proyectodevopsort'
      GAR_LOCATION: 'southamerica-east1'
      REPOSITORY: 'proyecto-devops-ort'
      IMAGE: ${{ inputs.service-name }}-microservice
      
    steps:
      
      - name: Checkout
        uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.6.0'
        with:
          service_account: 'artifact-admin@proyectodevopsort.iam.gserviceaccount.com'
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT }}'
          token_format: 'access_token'

      - uses: 'docker/login-action@v1'
        name: 'Docker login'
        with:
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: 'Docker build'
        run:
          docker build --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" ${{ github.workspace }}
      
      - name: 'Docker push'
        run: docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
     